##########################################
##      Cortex configuration file       ##
##https://docs.cortex.io/docs/reference ##
##                                      ##
##                                      ##
##                                      ##
##                                      ##
##                                      ##
##########################################

## API Spec and Version
openapi: 3.0.1

# Service Descriptors

# Required fields: info, title, x-cortex-tag
# Optional fields: description
info:
  title: <HUMAN_READABLE_SERVICE_NAME>
  x-cortex-tag: <SERVICE_TAG>
#  description: <DESCRIPTION>
#  x-cortex-type: <resource type eg mysql s3 kafka-topic OR domain> Defaults to service

# If the entity in question is a Resource, the definition must exist in Cortex prior. 
# Fill out the following with the definition fields from JSON schema more here: https://docs.cortex.io/docs/reference/basics/resource-catalog#resource-definitions
# x-cortex-definition:
  # Add required fields nested here

# Domains (Optional)
# Read more here https://docs.cortex.io/docs/reference/basics/domain-catalog
# x-cortex-domain-parents:
#   - tag: <parent domain tag>
#   - tag: <parent domain tag>
# x-cortex-children:
#   - tag: <child domain tag>
#   - tag: <child domain tag>


# Add any additional metadata nested under the "info" field to use in Query Builder

  # Links

  # Required fields: name, type (choose any type you prefer), url
  # Optional fields: description
  # x-cortex-link:
  #   - name: <HUMAN_READABLE_NAME>
  #     type: <TYPE>
  #     url: <URL_TO_LINK>
  #     description: <DESCRIPTION>
  #
  ## Note that type of OPENAPI/ASYNC_API will be displayed in the API Explorer tab in the Cortex UI
  ## Links support relative URLs

  # Dashboards

  # Required fields: url (refers to src of iframe generated in third-party dashboading tool)
  # Optional fields: type (enumerable field options listed below)
  # x-cortex-dashboards:
  # embeds:
  #   - type: <datadog | grafana | newrelic>
  #     url: <URL>


  # Groups

  # !Groups must contain only alphanumeric characters, and may not contain whitespaces!
  # Required fields: N/A
  # Optional fields: N/A
  # x-cortex-groups:
  #  - <GROUP_NAME>
  #  - <GROUP_NAME>
  #  - <GROUP_NAME>
  #
  # Note that hierarchies are only defineable via the API: https://docs.cortex.io/docs/reference/basics/service-groups#api


  # Custom Data

  # Required fields: N/A
  # Optional fields: N/A
  # x-cortex-custom-integration-mappings:
  # - my-alternative-mapping
  # - another-project-alias
  # Provide service alias for custom integration webhooks: https://docs.cortex.io/docs/reference/basics/custom-data#changing-the-mappings-for-services

  # x-cortex-custom-metadata:
    # my-key: the value
    # another-key:
    #   this: is
    #     an: object
    # my-key-2:
    #   value: the actual value for the key
    #   description: This is the description
    # final-key:
    #   - also
    #   - use
    #   - lists!
  #
  # Note the above is only an example of metadata you may add, not a recommendation. 
  # Structure and include data relevant to your organization if desired.

  # Dependencies

  # Required fields: x-cortex-tag, method (required if path present), path (required if method present)
  # Optional fields: description, metadata
  # x-cortex-dependency:
  #   cortex:
  #      - tag: <TAG>
  #       method: <HTTP_METHOD>
  #       path: <PATH_FOR_METHOD>
  #       description: <DESCRIPTION>
  #       metadata:
  #         tags:
  #           - <TAG_1>
  #           - <TAG_2>
  #         <key>: <value>
  #   aws: #Use if drawing dependency edges between resources in cloud providr<>services
  #       tags:
  #         - key: my-key-1
  #           value: my-value-1
  #         - key: my-key-2
  #           value: my-value-2
  # Note the metadata section above is customizable. https://docs.cortex.io/docs/reference/basics/dependencies

  # Integrations

  # AWS
  # All fields required
  # x-cortex-infra:
  #   aws:
  #     arns: #For resources only
  #       - <full arn>
  #       - <full arn>
  #     ecs: #For services and domains only
  #       - clusterArn: <CLUSTER_ARN>
  #         serviceArn: <SERVICE_ARN>
  #       - clusterArn: <CLUSTER_ARN_2>
  #         serviceArn: <SERVICE_ARN_2>
    
  # AzureAD
  # x-cortex-owners:
  #     - type: group
  #       name: <TEAM_NAME>
  #       provider: ACTIVE_DIRECTORY
  #       description: # optional
  #       inheritance: APPEND | FALLBACK | NONE #For Domains only

  # Azure DevOps
  # x-cortex-git:
  #   azure:
  #     project: <project-name>
  #     repository: <repository-name>
  #     basepath: <basepath> # optional

  # BambooHR
  # x-cortex-owners:
  #     - type: group
  #       name: <TEAM_NAME>
  #       provider: BAMBOO_HR
  #       description: # optional
  #       inheritance: APPEND | FALLBACK | NONE #For Domains only

  # Bitbucket
  # x-cortex-git:
  #   bitbucket:
  #     repository: <workspace>/<repo>

  # Bugsnag
  # x-cortex-bugsnag:
  #   project: <PROJECT_KEY> # projectKey in Bugsnag

  # Buildkite
  # x-cortex-ci-cd:
  # buildkite:
  #   pipelines:
  #   - slug: <slug 1>
  #   - slug: <slug 2>

  # Checkmarx
  # x-cortex-checkmarx:
  # projects:
  #   - projectName: <project name>
  #   - projectId: <project ID>
  # Note project name and ID are interchangeable

  #Codecov
  # x-cortex-static-analysis:
  #   codecov:
  #     repo: <REPO_NAME> # git repo, with org and repo name
  #     provider: <GITHUB | GITLAB | BITBUCKET> # select one of the three options

  #Datadog
  # x-cortex-apm:
  #   datadog:
  #     serviceTags: # List of tags & values
  #       - tag: <KEY>
  #         value: <VALUE>
  #       - tag: <KEY>
  #         value: <VALUE>
  #.    serviceName: <NAME IN DATADOG>
  #     monitors:
  #         - <MONITOR_ID>
  #         - <MONITOR_ID_2>
  # x-cortex-slos:
  #     datadog: # List of SLO ids
  #       - id: <SLO_ID>
  #       - id: <SLO_ID_2>

# Dynatrace
# x-cortex-apm:
#   dynatrace:
#     entityIds:
#       - <entity ID>
#     entityNameMatchers:
#       - "foo.*" #Regex for display name
# x-cortex-slos:
#   dynatrace:
#     - id: mock-slo-id-1


  # Github
  # x-cortex-git:
  #   github:
  #     repository: <org>/<repo>
  #     basepath: <SERVICE_NAME> # optional
  # x-cortex-owners:
  #   - type: group
  #     name: <ORGANIZATION>/<TEAM> # Must be of form <org>/<team>
  #       provider: GITHUB
  #       description: # optional
  #       inheritance: APPEND | FALLBACK | NONE #For Domains only


  # Gitlab
  # x-cortex-git:
  #   gitlab:
  #     repository: <namespace>/<project>
  #     basepath: <SERVICE_NAME> # optional


  # Google
  # x-cortex-owners:
  #   - type: group
  #     name: <GROUP_NAME>
  #     provider: GOOGLE
  #       inheritance: APPEND | FALLBACK | NONE #For Domains only
  # x-cortex-infra: #For resources
  #   gcp:
  #     resources:
  #       - resourceName: <resource name?
  #         projectId: <project id>
  #         resourceType: <type of resource>

  # Grafana
  # x-cortex-dashboards:
  #   embeds:
  #     - type: grafana
  #       url: <FULL_URL_TO_DASHBOARD>

  # Jira
  # x-cortex-issues:
  #   jira:
  #     defaultJql: '<insert default JQL>' # read here https://docs.cortex.io/docs/reference/integrations/jira
  #     labels:
  #       - <LABEL1>
  #       - <LABEL2>
  #     components:
  #       - <COMPONENT>
  #     projects:
  #       - <PROJECT>
  

  # Kubernetes
  # x-cortex-k8s:
  #  deployment:
  #    - identifier: namespace/name
  #      cluster: dev # optional
  #    - identifier: experiment/scratch
  #      cluster: dev
  #    - identifier: default/cortex
  #      cluster: prod
  #  argorollout:
  #    - identifier: namespace/name
  #      cluster: dev
  #  cronjob:
  #   - identifier: namespace/name
  #     cluster: dev
  #  statefulset:
  #   - identifier: namespace/name
  #     cluster: dev

  # Lightstep
  # x-cortex-slos:
  #   lightstep:
  #     - streamId: <STREAM_ID>
  #       targets:
  #       latency:
  #         - percentile: <PERCENTILE>
  #           target: <TARGET>
  #           slo: <SLO>

  # Mend
  # x-cortex-static-analysis:
  #   mend:
  #     applicationIds:
  #       - mend_id_1
  #       - mend_id_2
  #     projectIds:
  #       - project_id_1
  #       - project_id_2

  # New Relic
  # x-cortex-apm:
  #   newrelic:
  #     applicationId: <APP_ID>
  # x-cortex-dashboards:
  #   embeds:
  #     - type: newrelic
  #       url: <FULL_URL_TO_DASHBOARD>

  # Okta
  # x-cortex-owners:
  #   - type: group
  #     name: <GROUP_NAME> # group name in Okta
  #     provider: OKTA
  #     description: # optional

  # OpsGenie
  # x-cortex-oncall:
  #   opsgenie:
  #     type: SCHEDULE
  #     id: <SCHEDULE_ID> # Optionally, can use the Rotation UUID instead
  # x-cortex-owners:
  #   - type: group
  #     name: <GROUP_NAME>
  #     provider: OPSGENIE
  #     description: # optional
  #       inheritance: APPEND | FALLBACK | NONE #For Domains only
  # x-cortex-alerts:
  #   - type: opsgenie
  #     tag: <KEY>
  #     value: <VALUE>

  #Pagerduty
  # x-cortex-oncall:
  #   pagerduty:
  #     id: <SERVICE_ID> # Service ID
  #     type: SERVICE
  # x-cortex-oncall:
  #   pagerduty:
  #     id: <SCHEDULE_ID> # Schedule ID
  #     type: SCHEDULE
  # x-cortex-oncall:
  #   pagerduty:
  #     id: <POLICY_ID> # Escalation Policy ID
  #     type: ESCALATION_POLICY

  # Prometheus
  # x-cortex-slos:
  #  prometheus:
  #    - errorQuery: <query>
  #      totalQuery: <query>
  #      slo: <slo target number>
  #      alias: <alias>
  #      name: <name>

  # Rollbar
  # x-cortex-rollbar:
  #   project: <PROJECT_NAME> # projectName in Rollbar

  # Sentry
  # x-cortex-sentry:
  #   project: <PROJECT_NAME> # projectName in Sentry

  # SignalFX
  # x-cortex-slos:
  #   signalfx:
  #     - query: <FULL_SFX_QUERY>  # Ex. sf_metric:"jvm.memory.max" AND area:"nonheap"
  #       rollup: <ROLLUP>
  #       target: <TARGET>
  #       lookback: <LOOKBACK>
  #       operation: <OPERATION>

  # Slack
  # x-cortex-owners:
  #   - type: slack
  #     channel: <CHANNEL_NAME>
  #     notificationsEnabled: true #optional
  #     description: This is a description for this slack channel # optional
  #     inheritance: APPEND | FALLBACK | NONE #For Domains only
  # Note: list Slack channels, *without* the preceeding "#"

  # Snyk
  # x-cortex-snyk:
  #   projects:
  #     - organizationId:<ORGANIZATION_ID>
  #       projectId: <PROJECT_ID>
  #       source: <CODE or OPEN_SOURCE> # OPEN_SOURCE is default

  # Sonarqube
  # x-cortex-static-analysis:
  #   sonarqube:
  #     project: <PROJECT_KEY> # projectKey in SonarQube

  # Sumo Logic
  # x-cortex-slos:
  #   sumologic:
  #     - id: <SLO ID 1>
  #     - id: <SLO ID 2>

  # Veracode
  # x-cortex-static-analysis:
  #   veracode:
  #     applicationNames:
  #       - My Application
  #       - Second Application
  #     sandboxes:
  #       - applicationName: My Application
  #         sandboxName: My Sandbox
  #       - applicationName: Second Application
  #         sandboxName: Second Sandbox

  # VictorOps
  # x-cortex-oncall:
  #   victorops:
  #     type: SCHEDULE
  #     id: <SCHEDULE_ID>

  # Workday 
  # See setup guide here https://docs.cortex.io/docs/reference/integrations/workday
  # x-cortex-owners:
  # - type: group
  #   name: Engineering # teamName provided in the report
  #   provider: WORKDAY
  #   description: This is a description for this owner # optional